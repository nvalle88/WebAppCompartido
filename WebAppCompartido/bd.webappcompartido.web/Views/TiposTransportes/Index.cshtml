@model IEnumerable<ds.zeus.entities.Modelos.Compartido.TipoTransporte>
@{
    ViewData["Title"] = "Index";
}

<!-- widget grid -->
<section id="widget-grid" class="">
    <!-- <div class="alert alert-info alert-dismissable" draggable="auto">
            ViewData["Error"]
        </div>  -->
    <div class="row">



        <!-- NEW WIDGET START -->
        <article class="col-xs-12 col-sm-12 col-md-12 col-lg-12">

            <div class="jarviswidget jarviswidget-color-blueDark" id="wid-id-1" data-widget-editbutton="false">

                <header>
                    <span class="widget-icon"> <i class="fa fa-table"></i> </span>
                    <h2>Tipo de Transporte</h2>
                </header>
                <!-- widget div-->
                <div>
                    <div class="widget-body no-padding">
                        <table id="datatable_fixed_column" class="table table-striped table-bordered" width="100%">
                            <thead>
                                <tr>

                                    <i class="fa fa-fw fa-map-marker txt-color-blue hidden-md hidden-sm hidden-xs"></i>
                                    @Html.ActionLink("Nuevo Tipo de Transporte", "Create")
                                </tr>
                                <tr>
                                    <th class="hasinput" style="width:17%">
                                        <input type="text" class="form-control" placeholder="@Html.DisplayNameFor(model => model.Descripcion)" />
                                    </th>
                                    <th data-hide="phone,tablet">
                                        <span class="text-danger">@ViewData["Error"]</span>
                                        <i class="fa fa-fw fa-arrow-circle-o-down txt-color-blue hidden-md hidden-sm hidden-xs"></i>
                                    </th>
                                </tr>
                                <tr>
                                    <th data-class="expand">@Html.DisplayNameFor(model => model.Descripcion)</th>
                                    <th>Opciones</th>

                                </tr>
                            </thead>
                            <tbody>
                                @if (Model.Count() == 0)
                                {
                                    <tr>
                                        <td>
                                            No hay elementos
                                        </td>
                                    </tr>
                                }
                                else
                                {
                                    @foreach (var item in Model)
                                    {
                                        <tr>
                                            <td>
                                                @Html.DisplayFor(modelItem => item.Descripcion)
                                            </td>
                                            <td>
                                                @Html.ActionLink("Editar", "Edit", new { id = item.IdTipoTransporte }) |
                                                @Html.ActionLink("Eliminar", "Delete", new { id = item.IdTipoTransporte }, new { onclick = "return confirm('Desea eliminar el tipo de transporte... ?');" }) |

                                            </td>
                                        </tr>
                                    }
                                }
                            </tbody>

                        </table>

                    </div>
                    <!-- end widget content -->
                </div>
                <!-- end widget div -->
            </div>

        </article>
        <!-- WIDGET END -->
    </div>
    <!-- end row -->
    <!-- end row -->
</section>
<!-- end widget grid -->
<!-- END MAIN CONTENT -->
@section Scripts {
    <script type="text/javascript">

        // DO NOT REMOVE : GLOBAL FUNCTIONS!

        $(document).ready(function () {

            /* // DOM Position key index //

            l - Length changing (dropdown)
            f - Filtering input (search)
            t - The Table! (datatable)
            i - Information (records)
            p - Pagination (paging)
            r - pRocessing
            < and > - div elements
            <"#id" and > - div with an id
            <"class" and > - div with a class
            <"#id.class" and > - div with an id and class

            Also see: http://legacy.datatables.net/usage/features
            */

            /* BASIC ;*/
            var responsiveHelper_dt_basic = undefined;
            var responsiveHelper_datatable_fixed_column = undefined;
            var responsiveHelper_datatable_col_reorder = undefined;
            var responsiveHelper_datatable_tabletools = undefined;

            var breakpointDefinition = {
                tablet: 1024,
                phone: 480
            };

            /* COLUMN FILTER  */
            var otable = $('#datatable_fixed_column').DataTable({
                //"bFilter": false,
                //"bInfo": false,
                //"bLengthChange": false
                //"bAutoWidth": false,
                //"bPaginate": false,
                //"bStateSave": true // saves sort state using localStorage

                "sDom": "<'dt-toolbar'<'col-xs-12 col-sm-4' ><'col-sm-4 col-xs-8 hidden-xs'T><'col-sm-4 col-xs-8 hidden-xs'  l C >r>" +
                "t" +
                "<'dt-toolbar-footer'<'col-sm-6 col-xs-12 hidden-xs'i><'col-sm-6 col-xs-12'p>>",

                "oTableTools": {
                    "aButtons": [
                        "copy",
                        "csv",
                        "xls",
                        {
                            "sExtends": "pdf",
                            "sTitle": "SmartAdmin_PDF",
                            "sPdfMessage": "SmartAdmin PDF Export",
                            "sPdfSize": "letter"
                        },
                        {
                            "sExtends": "print",
                            "sMessage": "Generated by SmartAdmin <i>(press Esc to close)</i>"
                        }
                    ],
                    "sSwfPath": "/js/plugin/datatables/swf/copy_csv_xls_pdf.swf"
                },
                "autoWidth": true,
                "preDrawCallback": function () {
                    // Initialize the responsive datatables helper once.
                    if (!responsiveHelper_datatable_fixed_column) {
                        responsiveHelper_datatable_fixed_column = new ResponsiveDatatablesHelper($('#datatable_fixed_column'), breakpointDefinition);
                    }
                },
                "rowCallback": function (nRow) {
                    responsiveHelper_datatable_fixed_column.createExpandIcon(nRow);
                },
                "drawCallback": function (oSettings) {
                    responsiveHelper_datatable_fixed_column.respond();
                }

            });

            // custom toolbar
            $("div.toolbar").html('<div class="text-right"><img src="/img/logo.png" alt="SmartAdmin" style="width: 111px; margin-top: 3px; margin-right: 10px;"></div>');

            // Apply the filter
            $("#datatable_fixed_column thead th input[type=text]").on('keyup change', function () {

                otable
                    .column($(this).parent().index() + ':visible')
                    .search(this.value)
                    .draw();

            });
            /* END COLUMN FILTER */

            /* END TABLETOOLS */

        })

    </script>
}


